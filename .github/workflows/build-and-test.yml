name: Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      CMAKE_GENERATOR: Ninja
    strategy:
      fail-fast: false
      matrix:
        include:
          - compiler: gcc
          - compiler: clang
            libcxx: libstdc++
          - compiler: clang
            libcxx: libc++
    steps:
      - name: Checkout code into source directory
        uses: actions/checkout@v2
        with:
          path: source

      - name: Install dependencies
        run: sudo apt-get install -y build-essential cmake ninja-build

      - name: Install libc++ if needed
        if: matrix.libcxx == 'libc++'
        run: sudo apt-get install -y libc++-dev libc++abi-dev

      - name: Configure
        env:
          CC: ${{ matrix.compiler == 'gcc' && 'gcc' || 'clang' }}
          CXX: ${{ matrix.compiler == 'gcc' && 'g++' || 'clang++' }}
          CXXFLAGS: ${{ matrix.compiler == 'clang' && '-stdlib=' || '' }}${{ matrix.libcxx }}
        run: |
          cmake -S source -B build

      - name: Build
        run: |
          cmake --build build

      - name: Test
        run: |
          ctest --test-dir build --output-on-failure

  linters:
    runs-on: ubuntu-latest
    env:
      CMAKE_GENERATOR: Ninja
      CC: clang
      CXX: clang++
    strategy:
      fail-fast: false
      matrix:
        linter: [cppcheck, clang-tidy, include-what-you-use]

    steps:
      - name: Checkout code into source directory
        uses: actions/checkout@v2
        with:
          path: source

      - name: Install dependencies
        run: sudo apt-get install -y build-essential cmake clang ninja-build

      - name: Install linters
        run: |
          if [ "${{ matrix.linter }}" == "cppcheck" ]; then
            sudo apt-get install -y cppcheck
          elif [ "${{ matrix.linter }}" == "clang-tidy" ]; then
            sudo apt-get install -y clang-tidy
          elif [ "${{ matrix.linter }}" == "include-what-you-use" ]; then
            sudo apt-get install -y iwyu
          fi

      - name: Configure with linters enabled
        run: |
          cmake -S source -B build -DAUTOCOMPAT_ENABLE_LINTERS=ON

      - name: Build
        run: |
          cmake --build build
