name: Static Analyzers

on:
  workflow_call:

defaults:
  run:
    shell: bash

jobs:
  codeql:
    name: CodeQL
    runs-on: ubuntu-latest

    env:
      CI_COMPILER: clang
      CI_LINKER: lld

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: source

      - name: Setup CMake
        id: cmake
        uses: chuckatkins/github-utils/actions/setup-cmake@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          source_dir: source

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          source-root: source
          languages: c-cpp
          build-mode: manual
          queries: security-extended,security-and-quality

      - name: Configure
        run: |
          ${{ steps.cmake.outputs.cmake }} \
              -S ${{ steps.cmake.outputs.cmake_source_dir }} \
              -B ${{ steps.cmake.outputs.cmake_binary_dir }} \
              -DAUTOCOMPAT_ENABLE_TESTING=OFF

      - name: Build
        run: |
          ${{ steps.cmake.outputs.cmake }} \
              --build ${{ steps.cmake.outputs.cmake_binary_dir }}

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          checkout_path: ${{ github.workspace }}/source
          category: "/language:c-cpp"
          upload-database: true

  clang-analyzer:
    name: Clang Analyzer
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/chuckatkins/cuda-autocompat:ci-ubuntu-latest

    env:
      CC: clang
      CXX: clang++

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: source

      - name: Setup CMake
        id: cmake
        uses: chuckatkins/github-utils/actions/setup-cmake@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          source_dir: source

      - name: Configure
        env:
          LAUNCHER_OVERRIDE_CC: ${{ env.CC }}
          LAUNCHER_OVERRIDE_CXX: ${{ env.CXX }}
        run: |
          scan-build \
              ${{ steps.cmake.outputs.cmake }} \
                  -S ${{ steps.cmake.outputs.cmake_source_dir }} \
                  -B ${{ steps.cmake.outputs.cmake_binary_dir }} \
                  -DAUTOCOMPAT_ENABLE_OVERRIDE_LAUNCHER=ON \
                  -DBUILD_TESTING=OFF

      - name: Analyze
        env:
          CCC_CC: /bin/true
          CCC_CXX: /bin/true
        run: |
          mkdir sarif
          scan-build -V -sarif -o sarif \
              ${{ steps.cmake.outputs.cmake }} \
                  --build ${{ steps.cmake.outputs.cmake_binary_dir }}

      - name: Merge SARIF results
        run: |
          jq -s '.[0] * {
              runs: (map(.runs) | add | map(
                .tool.driver.name = "Clang Static Analyzer"
              ))
            }' \
            sarif/*/*.sarif | tee merged.sarif

      - name: Upload SARIF report
        uses: github/codeql-action/upload-sarif@v3
        with:
          checkout_path: source
          sarif_file: merged.sarif
