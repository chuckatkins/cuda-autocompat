name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

defaults:
  run:
    shell: bash

jobs:
  changed-files:
    name: Changed Files
    uses: ./.github/workflows/changed-files.yml

  build-and-test:
    needs: changed-files
    if: needs.changed-files.outputs.src_test

    name: Build
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/chuckatkins/cuda-autocompat:ci-ubuntu-latest

    env:
      CI_COMPILER: ${{ matrix.compiler }}
      CI_STDLIB: ${{ matrix.compiler.stdlib }}
      CI_RTLIB: ${{ matrix.compiler.rtlib }}
      CI_LINKER: ${{ matrix.linker }}

    strategy:
      fail-fast: false
      matrix:
        compiler: [gcc, clang]
        stdlib: [libstdc++, libc++]
        rtlib: [libgcc, compiler-rt]
        linker: [ld, lld]
        exclude:
          - compiler: gcc
            stdlib: libc++
          - compiler: gcc
            rtlib: compiler-rt

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: source

      - name: Setup CMake
        id: cmake
        uses: chuckatkins/github-utils/actions/setup-cmake@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          source_dir: source

      - name: Configure
        run: |
          ${{ steps.cmake.outputs.cmake }} \
              -S ${{ steps.cmake.outputs.cmake_source_dir }} \
              -B ${{ steps.cmake.outputs.cmake_binary_dir }}

      - name: Build
        run: |
          ${{ steps.cmake.outputs.cmake }} \
              --build ${{ steps.cmake.outputs.cmake_binary_dir }}

      - name: Test
        run: |
          ${{ steps.cmake.outputs.ctest }} \
              --test-dir ${{ steps.cmake.outputs.cmake_binary_dir }} \
              --output-on-failure

  linters:
    needs: changed-files
    if: needs.changed-files.outputs.src || needs.changed-files.outputs.linters
    name: Linters
    uses: ./.github/workflows/linters.yml

  static-analyzers:
    needs: changed-files
    if: needs.changed-files.outputs.src
    name: Static Analyzers
    uses: ./.github/workflows/static-analyzers.yml
    permissions:
      security-events: write
